{"version":3,"sources":["Todos.js","AddForm.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["MyComponent","handleChange","evt","setState","html","target","value","render","state","disabled","onChange","className","id","props","todo","React","Component","Todos","todos","deleteTodo","completeTodo","changeTodo","changeTodoContent","todoList","length","map","collectionItem","isCompleted","isVisible","animationOnAdd","radnomNum","key","style","fontSize","onInput","e","content","onClick","AddTodo","zpracujZmeny","zpracujSubmit","preventDefault","addTodo","onSubmit","this","htmlFor","placeholder","type","Footer","href","App","newContent","currentTarget","textContent","console","log","newTodos","filter","tod","setTimeout","replace","idtofocus","document","getElementById","focus","Math","random","todosNew","updateToShow","show","completeAll","every","x","deleteAllCompleted","deleteAll","ref","createRef","bind","prevProps","text","selectionStart","selectionEnd","showedTodos","some","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.da94104b.chunk.js","sourcesContent":["import React from \"react\";\r\n//import ReactDOM from \"react-dom\";\r\nimport ContentEditable from \"react-contenteditable\";\r\n\r\nclass MyComponent extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = { html: \"Notes: <em>You can add notes here<em>\"};\r\n  }\r\n\r\n  handleChange = evt => {\r\n    this.setState({ html: evt.target.value });\r\n  };\r\n\r\n  render = () => {\r\n    //let todoContent =  this.props.todo.content\r\n    //console.log(\"props are\",   this.props.todo.content)\r\n    return (\r\n      <ContentEditable\r\n        html={this.state.html} // innerHTML of the editable div\r\n        disabled={false} // use true to disable edition\r\n        onChange={this.handleChange} // handle innerHTML change\r\n        className= \"notes\"\r\n        id= {this.props.todo.id}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\n\r\nconst Todos = ({ todos, deleteTodo, completeTodo, changeTodo, changeTodoContent}) => {\r\n\r\n\r\n  const todoList = todos.length ? (\r\n    todos.map((todo) => {\r\n        let collectionItem = \"collection-item\"\r\n        if (todo.isCompleted === true) {\r\n            collectionItem += \" completedTodo\"\r\n        }\r\n      //  let animationClass = \"\"\r\n        if (todo.isVisible === false){\r\n           // animationClass += \"animate__animated animate__backOutRight\"\r\n        }\r\n        \r\n        let animationOnAdd = \"myLayout animate__animated\"\r\n        let radnomNum = todo.id\r\n\r\n        if (animationOnAdd === \"myLayout animate__animated\"){\r\n        if (radnomNum > 8){\r\n            animationOnAdd += \" animate__backInLeft\"\r\n          } else if (radnomNum > 6) {\r\n            animationOnAdd += \" animate__backInRight\"\r\n          } else if (radnomNum > 4) {\r\n            animationOnAdd += \" animate__backInUp\"\r\n          } else if (radnomNum > 2) {\r\n            animationOnAdd += \" animate__fadeInRightBig\"\r\n          } else if (radnomNum > 1) {\r\n            animationOnAdd += \" animate__fadeInUpBig\"\r\n          } else if (radnomNum >0) {\r\n            animationOnAdd += \" animate__lightSpeedInLeft\"\r\n      \r\n          } else {\r\n            animationOnAdd += \" animate__bounceInUp\"\r\n          }\r\n        }\r\n      return (\r\n        <div className={collectionItem}   key={todo.id}>\r\n           \r\n          <div className={animationOnAdd}>\r\n            \r\n            <div className=\"item1\">\r\n              <span className=\"todo-point\" style={{fontSize: \"25px\"}}> â–º </span>\r\n              <span className=\"todo-text\" /* contentEditable=\"true\" -> For now i had to cancel this because of caret position problems.*/  onInput={(e) => {changeTodoContent(e, todo)}} >{todo.content}</span>\r\n         \r\n              <MyComponent todo={todo}/>\r\n\r\n            </div>\r\n\r\n            <div className=\"item2\">\r\n              <button onClick={() => {completeTodo(todo.id, todo)}} className=\"btn-floating button-small waves-effect waves-light green\">\r\n                <i className=\"tiny material-icons\">check</i>\r\n              </button>\r\n\r\n\r\n              <button onClick={() => {deleteTodo(todo.id, todo)}} className=\"btn-floating button-small waves-effect waves-light red  scale-transition\">\r\n                <i className=\"tiny material-icons\">delete_forever</i>\r\n              </button>\r\n\r\n              <button onClick={() => {changeTodo(todo.id, todo)}} className=\"btn-floating button-small waves-effect waves-light blue\">\r\n                <i className=\"tiny material-icons\">create</i>\r\n              </button>\r\n            </div>\r\n          \r\n          </div>\r\n        </div>\r\n      );\r\n    })\r\n  ) : (\r\n    <h4 className=\"center green-text\">Nothing to show here!</h4>\r\n  );\r\n  return <div className=\"todos collection\">{todoList}</div>;\r\n};\r\n\r\nexport default Todos;\r\n","import React, { Component } from 'react'\r\n\r\nclass AddTodo extends Component {\r\n    state = {\r\n        content: \"\",\r\n        isVisible: true,\r\n        isCompleted: false,\r\n    }\r\n\r\n    zpracujZmeny = (e) => {\r\n        this.setState({\r\n           content: e.target.value \r\n        })\r\n    }\r\n\r\n    zpracujSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state)   //pass object with new content from form\r\n        this.setState({\r\n            content: \"\"\r\n        })\r\n    \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.zpracujSubmit}>\r\n                    <label htmlFor=\"\" >Add new todo:</label>\r\n                    <input id=\"mainInput\" placeholder=\"type here\" type=\"text\" onChange={this.zpracujZmeny} value={this.state.content}/>\r\n                    <button className=\"btn waves-effect waves-light blue wideButton\" >Add todo</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTodo","import React  from 'react'\r\n\r\nconst Footer = () => {\r\n\r\n\r\nreturn (\r\n\r\n          <footer className=\"footer-copyright page-footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n            Â© 2020 Pavel Å Å¥astnÃ½   <a id=\"info\"  className=\"footerText\" href=\"https://paulicz44.github.io/stastnypavel.github.io/index.html\">If you find a bug, please contact me.</a>\r\n           <a href=\"https://www.linkedin.com/in/pavel-stastny-155539150\" target=\"blank\" className=\"footerText right\"> LinkedIn</a> \r\n          <a href=\"https://www.freecodecamp.org/paulicz44\" target=\"blank\" className=\"footerText right\"> FCC profile </a> \r\n          <a href=\"https://paulicz44.github.io/stastnypavel.github.io/index.html\" target=\"blank\" className=\"footerText right\"> My Github</a> \r\n          <br/>\r\n        \r\n                </div>\r\n            </div>\r\n          </footer>\r\n\r\n        \r\n    )\r\n}\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\nimport Todos from './Todos'\nimport AddTodo from \"./AddForm\";\nimport Footer from \"./Footer\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.state = {\n      todos: [ {content: \"Your todo\", id: 10,  isVisible:false, isCompleted: false }\n      ],\n      show:\"all\"\n    };\n    this.deleteTodo = this.deleteTodo.bind(this);\n    this.changeTodo = this.changeTodo.bind(this);\n    this.completeTodo = this.completeTodo.bind(this);\n    this.changeTodoContent = this.changeTodoContent.bind(this);\n\n  }\n  filterTodos() {\n   const filteredTodos = this.state.todos.filter( x => x.isCompleted === false)\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.value !== this.props.value) {\n        this.text.selectionStart = this.text.value.length;\n        this.text.selectionEnd = this.text.value.length;\n    }\n};\n\n\n  changeTodoContent = (e, todo) => {\n    let newContent = e.currentTarget.textContent;\n    console.log(e);\n    console.log(e.currentTarget.textContent.length);\n    todo.content = newContent;\n    e.currentTarget.textContent = e.currentTarget.textContent.length;\n   \n\n    this.setState({\n      content: newContent\n    })\n  }\n\n  deleteTodo = (id, todo) => {\n    console.log(id)\n    todo.isVisible = false;\n    console.log(todo.isVisible)\n    const newTodos = this.state.todos.filter( tod => tod.id!==id)\n    setTimeout(() => {\n\n      this.setState({\n        todos: newTodos\n      })\n\n  }, 150);\n  \n  }\n  completeTodo = (id, todo) => {\n    console.log(\"Completed\", id)\n    if (todo.isCompleted === false){\n    todo.content += \" -> COMPLETED\";\n    todo.isCompleted = true;\n    this.setState((state) => ({\n      isCompleted: true,\n      content: state.content + \" COMPLETED\"\n    }))\n    }\n \n    else if (todo.isCompleted === true) {\n      let newContent = todo.content;\n      newContent.replace(\" -> COMPLETED\", \"\")\n      todo.content = todo.content.replace(\" -> COMPLETED\", \"\");\n      todo.isCompleted = false;\n      this.setState((state) => ({\n        isCompleted: false,\n        content: newContent\n      }))\n    }\n\n  }\n\n  changeTodo = (id, todo) => {\n    let focusMethod = function getFocus(idtofocus) {           \n      document.getElementById(idtofocus).focus();\n    }\n    console.log(\"Completed\", id)\n    focusMethod(id);\n\n  }\n\n  addTodo = (todo) => {\n  if (todo.content===\"\"){\n    console.log(\"Empty cont\")\n    let radnomNum = todo.id\n    console.log(radnomNum)\n    if (radnomNum > 8){\n      todo.content = \"Empty task? You had one job and you failed.\"\n    } else if (radnomNum > 6) {\n      todo.content = \"Did you really add an empty task?\"\n    } else if (radnomNum > 4) {\n      todo.content = \"Something should be here!\"\n    } else if (radnomNum > 2) {\n      todo.content = \"You have nothing to do?\"\n    } else if (radnomNum > 1) {\n      todo.content = \"You can delete this right now :)\"\n    } else if (radnomNum >0) {\n      todo.content = \"Again?\"\n\n    } else {\n      todo.content = \"Hmm...\"\n    }\n\n  }\n  todo.id = Math.random()*10;\n  todo.isVisible = true;\n  todo.isCompleted = false;\n  let todosNew  = [...this.state.todos, todo]\n  this.setState({\n    todos: todosNew\n  })\n  }\n\n  updateToShow = (state) => {\n    this.setState({\n      show: state\n    })\n  }\n /* jestli jsou vÅ¡echny complete - tak na vÅ¡echny pustit funci\n    jestli nejsou vÅ¡echny complete - tak spustit funci na ty co nejsou komplet\n\n    jestli je alespoÅˆ jeden complete tak pustit finkci jen na nekomplete else\n    pustit na vÅ¡echny\n\n    jestliÅ¾e je aspoÅˆ jeden nekompletnÃ­ tak to na nÄ›j pustÃ­me\n    pokud jsou vÅ¡echny komplet nebo nekomplet tak \n */\n  completeAll = () => {\n    if (this.state.todos.every(x => x.isCompleted === true)) {\n      console.log(\"EVERY\")\n      this.state.todos.map(x => this.completeTodo(x.id, x))\n     }\n\n   if (this.state.todos.filter(x => x.isCompleted ===  true).length) {\n    console.log(\"if vÄ›tev\", this.state.todos.filter(x => x.isCompleted ===  true).length)\n    this.state.todos.filter(x => x.isCompleted === false).map(x => this.completeTodo(x.id, x))\n  } else if ((this.state.todos.filter(x => x.isCompleted ===  true).length) === 0 )  {\n    console.log(\"delka\", this.state.todos.filter(x => x.isCompleted ===  true).length)\n      console.log(\"else vÄ›tev\");\n      this.state.todos.filter(x => x.isCompleted===false).map(x => this.completeTodo(x.id, x))\n   }\n   \n\n\n    // if else not needed but idealy, we would update all to uncomplete if all are complete\n   //no need to call setstate here if set state is called inside completeTodo\n  }\n\n  deleteAllCompleted = () => {\n    this.setState({\n      todos: this.state.todos.filter(todo=> !todo.isCompleted)\n    })\n  }\n\n  deleteAll = () => {\n    this.setState({\n      todos: []\n    })\n  }\n\n\n\n  render() {\n    let showedTodos = []\n\n    if (this.state.show===\"all\") {\n      showedTodos = this.state.todos\n    } else if (this.state.show===\"completed\"){\n      showedTodos = this.state.todos.filter(todo=> todo.isCompleted)\n    } else if (this.state.show===\"active\"){\n      showedTodos = this.state.todos.filter(todo=> !todo.isCompleted)\n    }\n\n    return (\n      <div className=\"todo-add container\">\n        <h1 className=\"center blue-text\">Simple todo list</h1>\n        <AddTodo addTodo={this.addTodo}/>\n        <Todos todos={showedTodos} deleteTodo={this.deleteTodo} completeTodo={this.completeTodo} changeTodo={this.changeTodo} changeTodoContent={this.changeTodoContent} />\n\n        <button className=\"btn light-blue darken-4  waves-effect waves-green controlBtn\" onClick={() => this.updateToShow(\"completed\")}>Only Completed</button>\n\n        <button className=\"btn light-blue darken-4  waves-effect waves-green controlBtn\" onClick={() => this.updateToShow(\"active\")}>Only Active</button>\n\n        <button className=\"btn light-blue darken-4  waves-effect waves-green controlBtn\" onClick={() => this.updateToShow(\"all\")}>Show All </button>\n\n        <button className=\"btn green  waves-effect waves-light controlBtn\" onClick={this.completeAll}>Complete All</button>\n\n        \n\n        <button className=\"btn red darken-4  waves-effect waves-yellow controlBtn\" onClick= {this.deleteAll}>Delete All</button>\n\n        {this.state.todos.some(x => x.isCompleted) ? \n        <button className=\"btn red darken-2  waves-effect waves-yellow controlBtn\" onClick={this.deleteAllCompleted}>Delete Completed</button> \n        : null }\n\n        <h5 className=\"right-align text-black marginExtra\">Todos left: {this.state.todos.filter(todo=> !todo.isCompleted).length}</h5>\n        <Footer />\n      </div>\n\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}